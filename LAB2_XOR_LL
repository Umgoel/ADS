#include<iostream>
// #include<vector>
// #include<cstdint>
using namespace std;

struct node{
    int data;
    node* link;
};

node* XOR(node *x, node *y){
    return (node*)((uintptr_t)(x)^(uintptr_t)(y));
}

void display(node* head){
    cout<<"List Data = \n"<<endl;
    node* current = head;
    node* prev = NULL;
    node *next;
    
    while(current!=NULL){
        cout<<current->data<<endl;
        next = XOR(prev, current->link);
        prev = current;
        current = next;
    }
    cout<<"End of list\n";
}

void insert(node* &first, int value){
    node* new_node = new node();
    new_node->data = value;
    new_node->link = XOR(first,NULL);
    
    if(first)
        first->link = XOR(new_node, XOR(first->link, nullptr));
    first=new_node;
}

void pop(node* &first){
    node* next=XOR(first->link,NULL); 
    node* n_next=XOR(first,next->link); 
    first=next;
    first->link = XOR(NULL,n_next);
}

int main(){
    node *head=NULL;
    for(int i=0;i<5;i++){
        insert(head,i);
    }
    display(head);
    pop(head);
    display(head);
    return 0;
}
